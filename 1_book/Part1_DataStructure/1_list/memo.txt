** 링크드 리스트(Linked List)
	리스트 내의 각 요소는 노드(Node)
	노드를 연결해서 만드는 리스트
	리스트의 첫 번째 노드를 헤드(Head)라 하고, 마지막 노드를 테일(Tail)이라고 함

	1) 장점
		새로운 노드의 추가, 삽입, 삭제가 쉽고 빠름
		현재 노드의 다음 노드를 얻어오는 연산에 대해서는 비용이 발생하지 않음
	2) 단점
		다음 노드를 가리키려는 포인터 때문에 각 노드마다 4Byte의 메모리 추가 필요
		특정 위치에 있는 노드를 얻는데 드는 비용이 크고 속도가 느림

	즉, 노드의 추가, 삽입, 삭제는 빠르나 특정 위치에 있는 노드를 찾는 연산이 느림

	해당 자료구조가 사용되기에 적합한 곳은 
	레코드의 추가 삽입 삭제가 잦고 조회가 드문 곳으로 데이터베이스에서 조회해온 레코드를 순차적으로 다루는데 제격임

** 더블 링크드 리스트(Doubly Linked List)
	링크드 리스트의 탐색 기능을 개선한 자료구조
	링크드 리서트는 노드를 찾으려면 헤드에서 테일 방향으로만 탐색이 가능하나 더블 링크드 리스트는 양방향 탐색이 가능